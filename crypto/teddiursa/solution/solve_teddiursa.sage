n, c = (7319950562680259734137032947358111118255688369734484674099422822287290289230874220571825299176849757192543072736837886307888874893472622460495026429265991657524891094851825019573031062063462713452787592585873813603584548693913144787999978318652095107775892267767068157242937212642543359198622717718319592941, 2756098302213611341494852520327959335705370812516491234954542905009813589640179630359598760472844957488340178930898027921160733554657652417413910764309347311024933941753737565138643832206019857514230458408747159163690545012726184670465626227831250603556085176484852038872707464033729627458945595912009362840)

# p is a 512-bit prime, so it has exactly 154 or 155 digits.
# we consider the (easier) case where p is exactly 154 digits
# and leave the trickier case of 155 digits to the reader
for i in range(3):
    moo = ((n // 10^231) - i) * 10^77 + n % 10^77
    mop = (n - moo * (10^154+1)) // 10^77
    sm = sqrt(mop + 2*moo)/2
    df = sqrt(mop - 2*moo)/2
    if sm in ZZ and df in ZZ:
        a, b = ZZ(sm-df), ZZ(sm+df)
        break

p = a * 10^77 + b
q = b * 10^77 + a
assert p*q == n

from Crypto.Util.number import *
print(long_to_bytes(pow(c, pow(65537,-1,(p-1)*(q-1)),n)))
# b'oiccflag{is_it_any_harder_if_p_was_155_digits_instead_of_154?}'